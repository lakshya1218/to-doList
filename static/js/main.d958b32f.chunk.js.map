{"version":3,"sources":["components/ToDoItem.jsx","components/InputArea.jsx","components/Completed.jsx","components/Incompleted.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","React","createElement","onClick","onChecked","id","text","InputArea","_useState","useState","_useState2","_slicedToArray","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","Completed","_ref","completedItems","onMoveToIncomplete","map","completedItem","index","key","Incompleted","items","setItems","_useState3","_useState4","setCompletedItems","deleteItem","prevItems","updatedItems","filter","item","prevCompletedItems","concat","_toConsumableArray","todoItem","updatedCompletedItems","App","ReactDOM","render","document","getElementById"],"mappings":"8NAceA,MAZf,SAAkBC,GAChB,OACEC,IAAAC,cAAA,OACEC,QAAS,WACPH,EAAMI,UAAUJ,EAAMK,MAGxBJ,IAAAC,cAAA,UAAKF,EAAMM,Q,OCgBFC,MAvBf,SAAmBP,GACjB,IAAAQ,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAO9B,OACET,IAAAC,cAAA,OAAKY,UAAU,QACbb,IAAAC,cAAA,SAAOa,SAPX,SAAsBC,GACpB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKoBG,KAAK,OAAOD,MAAOP,IAClDX,IAAAC,cAAA,UACEC,QAAS,WACPH,EAAMqB,MAAMT,GACZC,EAAa,MAGfZ,IAAAC,cAAA,YAAM,U,OCECoB,MAnBf,SAAkBC,GAA0C,IAAvCC,EAAcD,EAAdC,eAAgBC,EAAkBF,EAAlBE,mBACnC,OACExB,IAAAC,cAAA,OAAKY,UAAU,wBACbb,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,UACGsB,EAAeE,KAAI,SAACC,EAAeC,GAAK,OACvC3B,IAAAC,cAAA,MACE2B,IAAKD,EACLzB,QAAS,kBAAMsB,EAAmBE,IAClCb,UAAU,kBAETa,SCiDEG,MAzDf,WACE,IAAAtB,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/BuB,EAAKrB,EAAA,GAAEsB,EAAQtB,EAAA,GACtBuB,EAA4CxB,mBAAS,IAAGyB,EAAAvB,YAAAsB,EAAA,GAAjDT,EAAcU,EAAA,GAAEC,EAAiBD,EAAA,GAQxC,SAASE,EAAW/B,GAClB2B,GAAS,SAACK,GACR,IAAMC,EAAeD,EAAUE,QAAO,SAACC,EAAMZ,GAC3C,OAAOA,IAAUvB,KAMnB,OAJA8B,GAAkB,SAACM,GAAkB,SAAAC,OAAAC,YAChCF,GAAkB,CACrBJ,EAAUhC,QAELiC,KAcX,OACErC,IAAAC,cAAA,OAAKY,UAAU,aACbb,IAAAC,cAAA,OAAKY,UAAU,WACbb,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAACK,EAAS,CAACc,MAlCf,SAAiBT,GACfoB,GAAS,SAACK,GACR,MAAM,GAANK,OAAAC,YAAWN,GAAS,CAAEzB,UAiCtBX,IAAAC,cAAA,WACED,IAAAC,cAAA,UACG6B,EAAML,KAAI,SAACkB,EAAUhB,GAAK,OACzB3B,IAAAC,cAACH,EAAQ,CACP8B,IAAKD,EACLvB,GAAIuB,EACJtB,KAAMsC,EACNxC,UAAWgC,SAMnBnC,IAAAC,cAACoB,EAAS,CAACE,eAAgBA,EAAgBC,mBA7B/C,SAA0BE,GACxBQ,GAAkB,SAACM,GACjB,IAAMI,EAAwBJ,EAAmBF,QAC/C,SAACC,GAAI,OAAKA,IAASb,KAGrB,OADAK,GAAS,SAACK,GAAS,SAAAK,OAAAC,YAASN,GAAS,CAAEV,OAChCkB,UCrBEC,MARf,WAGE,OACE7C,IAAAC,cAAC4B,EAAW,OCLhBiB,IAASC,OAAO/C,IAAAC,cAAC4C,EAAG,MAAKG,SAASC,eAAe,U","file":"static/js/main.d958b32f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ToDoItem(props) {\n  return (\n    <div\n      onClick={() => {\n        props.onChecked(props.id);\n      }}\n    >\n      <li>{props.text}</li>\n    </div>\n  );\n}\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\n\nfunction InputArea(props) {\n  const [inputText, setInputText] = useState(\"\");\n\n  function handleChange(event) {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  return (\n    <div className=\"form\">\n      <input onChange={handleChange} type=\"text\" value={inputText} />\n      <button\n        onClick={() => {\n          props.onAdd(inputText);\n          setInputText(\"\");\n        }}\n      >\n        <span>Add</span>\n      </button>\n    </div>\n  );\n}\n\nexport default InputArea;\n","import React from \"react\";\r\n\r\nfunction Completed({ completedItems, onMoveToIncomplete }) {\r\n  return (\r\n    <div className=\"completed-container \">\r\n      <h2>Completed Items</h2>\r\n      <ul>\r\n        {completedItems.map((completedItem, index) => (\r\n          <li\r\n            key={index}\r\n            onClick={() => onMoveToIncomplete(completedItem)}\r\n            className=\"completed-item\"\r\n          >\r\n            {completedItem}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Completed;\r\n","import React, { useState } from \"react\";\r\nimport ToDoItem from \"./ToDoItem\";\r\nimport InputArea from \"./InputArea\";\r\nimport Completed from \"./Completed\"; // Import the Completed component\r\n\r\nfunction Incompleted() {\r\n  const [items, setItems] = useState([]);\r\n  const [completedItems, setCompletedItems] = useState([]);\r\n\r\n  function addItem(inputText) {\r\n    setItems((prevItems) => {\r\n      return [...prevItems, inputText];\r\n    });\r\n  }\r\n\r\n  function deleteItem(id) {\r\n    setItems((prevItems) => {\r\n      const updatedItems = prevItems.filter((item, index) => {\r\n        return index !== id;\r\n      });\r\n      setCompletedItems((prevCompletedItems) => [\r\n        ...prevCompletedItems,\r\n        prevItems[id],\r\n      ]);\r\n      return updatedItems;\r\n    });\r\n  }\r\n\r\n  function moveToIncomplete(completedItem) {\r\n    setCompletedItems((prevCompletedItems) => {\r\n      const updatedCompletedItems = prevCompletedItems.filter(\r\n        (item) => item !== completedItem\r\n      );\r\n      setItems((prevItems) => [...prevItems, completedItem]);\r\n      return updatedCompletedItems;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"heading\">\r\n        <h1>To-Do List</h1>\r\n      </div>\r\n      <InputArea onAdd={addItem} />\r\n      <div>\r\n        <ul>\r\n          {items.map((todoItem, index) => (\r\n            <ToDoItem\r\n              key={index}\r\n              id={index}\r\n              text={todoItem}\r\n              onChecked={deleteItem}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {/* Render the Completed component and pass the completedItems state and the moveToIncomplete function */}\r\n      <Completed completedItems={completedItems} onMoveToIncomplete={moveToIncomplete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Incompleted;\r\n","import React, { useState } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport InputArea from \"./InputArea\";\nimport Incompleted from \"./Incompleted\";\n\nfunction App() {\n  \n\n  return (\n    <Incompleted/>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: I have extracted the Input Area, including the <input> and\n//<button> elements into a seperate Component called InputArea.\n//Your job is to make the app work as it did before but this time with the\n//InputArea as a seperate Component.\n\n// DO NOT: Modify the ToDoItem.jsx\n// DO NOT: Move the input/button elements back into the App.jsx\n\n//Hint 1: You will need to think about how to manage the state of the input element\n//in InputArea.jsx.\n//Hint 2: You will need to think about how to pass the input value back into\n//the addItem() function in App.jsx.\n"],"sourceRoot":""}